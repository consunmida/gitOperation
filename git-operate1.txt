git log --graph --pretty=oneline --abbrev-commit


git log --graph 可以看到分支合并图

git commit --amend 修改最后一次提交注释信息   后git push -f（谨慎）

如果修改之的第三次提交的信息可以这样：git rebase -i HEAD~3 然后
	这个命令出来之后，会出来三行东东：

        pick:*******

        pick:*******

        pick:*******

        如果你要修改哪个，就把那行的pick改成edit，然后退出，
	再通过git log查看，git的最后一次提已经变成你选的那个了，再执行git commit --amend
	对commit进行修改，再执行git rebase --continue.

git 几个commit点合并成一个commit点：
	git rebase -i commitId  这里面的commitId是你要合并的两个commit后所形成的一个commitId需要
	跟着的commitId（https://blog.csdn.net/u013276277/article/details/82470177）

git branch -D feature-vulcan 分支还没有被合并，
如果删除，将丢失掉修改，如果要强行删除，需要使用大写的-D参数。。

git checkout -b dev origin/dev  在本地创建和远程分支对应的分支

git branch --set-upstream-to=origin/remote_branch  your_branch  本地关联远程分支


命令git push origin <tagname>可以推送一个本地标签；

命令git push origin --tags可以推送全部未推送过的本地标签；

命令git tag -d <tagname>可以删除一个本地标签；

命令git push origin :refs/tags/<tagname>可以删除一个远程标签

git config --global credential.helper store 记住用户名密码